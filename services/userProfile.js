const { getDatabase } = require("../database/db");

class UserProfileService {
  constructor() {
    this.db = null;
  }

  async init() {
    this.db = getDatabase();
    if (!this.db) {
      throw new Error("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
    }
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  async addToHistory(userId, content, role) {
    try {
      const stmt = this.db.prepare(
        "INSERT INTO chat_history (user_id, role, content) VALUES (?, ?, ?)"
      );
      stmt.run(userId, role, content);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é:", error);
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏–∑ –±–∞–∑—ã
  async getChatHistory(userId, limit = 10) {
    try {
      const stmt = this.db.prepare(`
        SELECT role, content 
        FROM chat_history 
        WHERE user_id = ? 
        ORDER BY timestamp DESC 
        LIMIT ?
      `);
      const messages = stmt.all(userId, limit);
      return messages.reverse();
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏:", error);
      return [];
    }
  }

  // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
  async clearHistory(userId) {
    try {
      const stmt = this.db.prepare(
        "DELETE FROM chat_history WHERE user_id = ?"
      );
      stmt.run(userId);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:", error);
    }
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async saveProfile(userId, profile) {
    try {
      const stmt = this.db.prepare(`
        INSERT OR REPLACE INTO user_profiles (user_id, name, age, interests, profession)
        VALUES (?, ?, ?, ?, ?)
      `);
      stmt.run(
        userId,
        profile.name,
        profile.age,
        profile.interests,
        profile.profession
      );
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error);
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async getProfile(userId) {
    try {
      const stmt = this.db.prepare(
        "SELECT * FROM user_profiles WHERE user_id = ?"
      );
      return stmt.get(userId);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:", error);
      return null;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
const userService = new UserProfileService();

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
function getSystemPrompt(userProfile = null) {
  let profileInfo =
    "–ê—Ä—Ç–µ–º, 17 –ª–µ—Ç, –±–∏–∑–Ω–µ—Å (–ø—Ä–æ–¥–∞–∂–∞ —Ä–µ–∫–ª–∞–º—ã), IT, –ø–ª–∞–Ω—ã –ø–æ –≤–µ–Ω–¥–∏–Ω–≥—É.";

  if (userProfile) {
    profileInfo = `${userProfile.name || "–ê—Ä—Ç–µ–º"}, ${
      userProfile.age || "17"
    } –ª–µ—Ç, `;
    if (userProfile.profession)
      profileInfo += `–±–∏–∑–Ω–µ—Å (${userProfile.profession}), `;
    if (userProfile.interests)
      profileInfo += `–∏–Ω—Ç–µ—Ä–µ—Å—ã: ${userProfile.interests}`;
  }

  return {
    role: "system",
    content: `–¢—ã - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç ${profileInfo}. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.

# –°—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
- –û—Ç–≤–µ—á–∞–π –ø–æ —Å—É—â–µ—Å—Ç–≤—É –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º
- –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–∞–π–ª–∏–∫–∏ –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–≥–æ —Ç–æ–Ω–∞
- –ê–¥–∞–ø—Ç–∏—Ä—É–π —Å—Ç–∏–ª—å –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥ —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞

# –ü—Ä–∏–Ω—Ü–∏–ø—ã –æ—Ç–≤–µ—Ç–æ–≤
1. –ù–∞ –ø—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –±—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã) –æ—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ
2. –ù–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã (–ø—Ä–æ —Å–∫–∞–∑–∫–∏, —Ñ–∞–∫—Ç—ã, –∑–Ω–∞–Ω–∏—è) –¥–∞–≤–∞–π –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç –ø–æ —Ç–µ–º–µ
3. –ù–∞ –±–∏–∑–Ω–µ—Å-–≤–æ–ø—Ä–æ—Å—ã –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥
4. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ–ø–æ–Ω—è—Ç–µ–Ω, —É—Ç–æ—á–Ω–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç

–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤:
- –ù–∞ "–ü—Ä–∏–≤–µ—Ç" ‚Üí "–ü—Ä–∏–≤–µ—Ç! üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
- –ù–∞ "–ö–∞–∫ –¥–µ–ª–∞?" ‚Üí "–í—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏."
- –ù–∞ "–¢—ã –∑–Ω–∞–µ—à—å —Å–∫–∞–∑–∫—É –æ –∫–æ–ª–æ–±–∫–µ?" ‚Üí "–ö–æ–Ω–µ—á–Ω–æ –∑–Ω–∞—é! –≠—Ç–æ –Ω–∞—Ä–æ–¥–Ω–∞—è —Å–∫–∞–∑–∫–∞ –æ –∫–æ–ª–æ–±–∫–µ, –∫–æ—Ç–æ—Ä—ã–π —É—à–µ–ª –æ—Ç –¥–µ–¥—É—à–∫–∏ –∏ –±–∞–±—É—à–∫–∏ –∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª —Ä–∞–∑–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –ª–µ—Å—É. –•–æ—á–µ—à—å, —Ä–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ?"
- –ù–∞ –±–∏–∑–Ω–µ—Å-–≤–æ–ø—Ä–æ—Å—ã ‚Üí –¥–∞–≤–∞–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏

–û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä—è–º–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ—Ç–≤–ª–µ—á–µ–Ω–∏–π –Ω–∞ –±–∏–∑–Ω–µ—Å-—Ç–µ–º–∞—Ç–∏–∫—É, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –Ω–µ–π.`,
  };
}

module.exports = { userService, getSystemPrompt };
